{"version":3,"sources":["Header.js","axios.js","Tindercards.js","SwipeButtons.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","IconButton","fontSize","src","alt","instance","axios","create","baseURL","Tindercards","useState","people","setPeople","useEffect","a","get","req","data","fetchData","map","person","preventSwipe","onSwipe","nameToBeDeleted","name","console","log","onCardLeftScreen","style","backgroundImage","imgUrl","SwipeButtons","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8UAwBeA,MAlBf,WACI,OACI,sBAAKC,UAAU,SAAf,UAEI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,CAAYC,SAAS,QAAQF,UAAU,2BAG3C,qBAAKA,UAAU,eAAeG,IAAI,mBAAmBC,IAAI,KAEzD,cAACH,EAAA,EAAD,UACI,cAAC,IAAD,CAAWC,SAAS,QAAQF,UAAU,uB,kECXvCK,E,OAJEC,EAAMC,OAAO,CAC1BC,QAAS,sDCoDEC,MAlDf,WAAwB,IAAD,EACSC,mBAAS,IADlB,mBACZC,EADY,KACJC,EADI,KAsBnB,OAnBAC,qBAAU,WAAM,4CACZ,4BAAAC,EAAA,sEACsBR,EAAMS,IAAI,iBADhC,OACUC,EADV,OAGIJ,EAAUI,EAAIC,MAHlB,4CADY,uBAAC,WAAD,wBAOZC,KACD,IAYC,qBAAKlB,UAAU,cAAf,SACI,qBAAKA,UAAU,6BAAf,SAEKW,EAAOQ,KAAI,SAAAC,GAAM,OACd,cAAC,IAAD,CACIpB,UAAY,QAEZqB,aAAgB,CAAC,KAAM,QACvBC,QAAW,kBAlBfC,EAkB4BH,EAAOI,UAjB/CC,QAAQC,IAAI,eAAiBH,GADlB,IAACA,GAmBII,iBAAoB,kBAfpBH,EAeqCJ,EAAOI,UAd5DC,QAAQC,IAAIF,EAAO,oBADJ,IAACA,GAUJ,SAOI,qBACII,MAAS,CAAEC,gBAAgB,OAAD,OAAST,EAAOU,OAAhB,MAC1B9B,UAAU,OAFd,SAII,6BAAKoB,EAAOI,UATTJ,EAAOI,c,6FCEvBO,MA3Bf,WACI,OACI,sBAAK/B,UAAU,eAAf,UAEI,cAACC,EAAA,EAAD,CAAYD,UAAU,uBAAtB,SACI,cAAC,IAAD,CAAYE,SAAS,YAGzB,cAACD,EAAA,EAAD,CAAYD,UAAU,sBAAtB,SACI,cAAC,IAAD,CAAWE,SAAS,YAGxB,cAACD,EAAA,EAAD,CAAYD,UAAU,yBAAtB,SACI,cAAC,IAAD,CAAcE,SAAS,YAG3B,cAACD,EAAA,EAAD,CAAYD,UAAU,yBAAtB,SACI,cAAC,IAAD,CAAcE,SAAS,YAG3B,cAACD,EAAA,EAAD,CAAYD,UAAU,wBAAtB,SACI,cAAC,IAAD,CAAaE,SAAS,gBCZvB8B,MAZf,WACE,OACE,sBAAKhC,UAAU,MAAf,UAEE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCASiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8dfe27fe.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./Header.css\"\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport ForumIcon from '@material-ui/icons/Forum';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"header\">\r\n            \r\n            <IconButton>\r\n                <PersonIcon fontSize=\"Large\" className=\"swipeButtons__repeat\"/>\r\n            </IconButton>\r\n\r\n            <img className=\"header__logo\" src=\"/tinder-logo.png\" alt=\"\" />\r\n\r\n            <IconButton>\r\n                <ForumIcon fontSize=\"Large\" className=\"header__icon\"/>\r\n            </IconButton>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://tinder-clone-nodejs-backend.herokuapp.com',\r\n});\r\n\r\nexport default instance","import React, { useState, useEffect } from 'react'\r\nimport \"./TinderCards.css\"\r\nimport TinderCard from 'react-tinder-card'\r\nimport axios from './axios'\r\n\r\nfunction Tindercards() {\r\n    const [people, setPeople] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const req = await axios.get('/tinder_cards');\r\n\r\n            setPeople(req.data);\r\n        }\r\n\r\n        fetchData();\r\n    }, []);\r\n    \r\n    const swiped = (nameToBeDeleted) => {\r\n        console.log('You swiped: ' + nameToBeDeleted);\r\n    }\r\n   \r\n    const outOfFrame = (name) => {\r\n        console.log(name + ' left the screen')\r\n    }\r\n    \r\n    //map function is used to iterate over an array and manipulate or change data items. \r\n    return (\r\n        <div className=\"tinderCards\">\r\n            <div className=\"tinderCards__cardContainer\">\r\n\r\n                {people.map(person => (\r\n                    <TinderCard\r\n                        className = \"swipe\"\r\n                        key = {person.name}\r\n                        preventSwipe = {['up', 'down']}\r\n                        onSwipe = {() => swiped(person.name)}\r\n                        onCardLeftScreen = {() => outOfFrame(person.name)}\r\n                    >\r\n                        <div\r\n                            style = {{ backgroundImage: `url(${person.imgUrl})` }}\r\n                            className='card'\r\n                        >\r\n                            <h3>{person.name}</h3>\r\n\r\n                        </div>\r\n\r\n                    </TinderCard>\r\n                ))}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tindercards\r\n","import React from 'react'\r\nimport \"./SwipeButtons.css\"\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport StarRateIcon from '@material-ui/icons/StarRate';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\r\n\r\nfunction SwipeButtons() {\r\n    return (\r\n        <div className='swipeButtons'>\r\n\r\n            <IconButton className=\"swipeButtons__replay\">\r\n                <ReplayIcon fontSize=\"Large\"/>\r\n            </IconButton>\r\n\r\n            <IconButton className=\"swipeButtons__close\">\r\n                <CloseIcon fontSize=\"Large\"/>\r\n            </IconButton>\r\n\r\n            <IconButton className=\"swipeButtons__starRate\">\r\n                <StarRateIcon fontSize=\"Large\"/>\r\n            </IconButton>\r\n\r\n            <IconButton className=\"swipeButtons__favorite\">\r\n                <FavoriteIcon fontSize=\"Large\"/>\r\n            </IconButton>\r\n\r\n            <IconButton className=\"swipeButtons__flashOn\">\r\n                <FlashOnIcon fontSize=\"Large\"/>\r\n            </IconButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SwipeButtons\r\n","import React from \"react\";\nimport './App.css';\nimport Header from \"./Header\";\nimport TinderCards from \"./Tindercards\"\nimport SwipeButtons from \"./SwipeButtons\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <Header />\n      <TinderCards/>\n      <SwipeButtons/>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}